---
title: "Project title"
subtitle: "STA/ISS 313 - Project 1"
author: "Team Name"
format: html
editor: visual
---

## Abstract

(1 paragraph): Project abstract.

------------------------------------------------------------------------

## Introduction

(1-2 paragraphs): Brief introduction to the dataset. You may repeat some of the information about the dataset provided in the introduction to the dataset on the TidyTuesday repository, paraphrasing on your own terms. Imagine that your project is a standalone document and the grader has no prior knowledge of the dataset.

## Question 1: Title that relates to the question you're answering

### Introduction

(1-2 paragraphs): Introduction to the question and what parts of the dataset are necessary to answer the question. Also discuss why you're interested in this question.

### Approach

(1-2 paragraphs): Describe what types of plots you are going to make to address your question. For each plot, provide a clear explanation as to why this plot (e.g. boxplot, barplot, histogram, etc.) is best for providing the information you are asking about. The two plots should be of different types, and at least one of the two plots needs to use either color mapping or facets.

### Analysis

(2-3 code blocks, 2 figures, text/code comments as needed): In this section, provide the code that generates your plots. Use scale functions to provide nice axis labels and guides. You are welcome to use theme functions to customize the appearance of your plot, but you are not required to do so. All plots must be made with **ggplot2**. Do not use base R or lattice plotting functions.

```{r load-packages}
library(tidyverse)
library(lubridate)
```

```{r load-data}
corp_by_politician <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-06-07/corp_by_politician.csv')
static_list <-readRDS("data/static_list.RDS")
contribution_data_all_states <-readRDS("data/contribution_data_all_states.RDS")

question2_data <- inner_join(contribution_data_all_states, corp_by_politician, by = "Politician")

question2_data <- question2_data %>%
  filter(!is.na(Date)) %>%
  mutate(year = year(ymd(Date))) %>%
  filter(year == 2019 | year == 2020 | year == 2021 | year == 2022) 

question2_data <- question2_data %>%
  mutate(is_greg = ifelse(Politician == "Greg Abbott", "Greg Abbott", "Not Greg"))

#question2_data %>% filter(Politician == "Greg Abbott") %>% select(year) %>% unique()
#Greg only had data in years 2019-2022
```

```{r plot-4-data-processing}
greg_not_greg <- question2_data %>%
  group_by(is_greg, year) %>%
  summarise(amounts = sum(Amount),
            .groups = 'drop')

not_greg <- greg_not_greg %>%
  filter(is_greg == "Not Greg")

props_greg_not_greg <- greg_not_greg %>%
  group_by(year) %>%
  summarise(prop = round(100 * (amounts / sum(amounts)), 0),
            .groups = 'drop')

total_amount_per_year <- greg_not_greg %>%
  group_by(year) %>%
  summarise(amount_sum = sum(amounts), 
            .groups = 'drop')

annotation_data_2019 <- tribble(
  ~ amount_min,
  ~ amount_max,
  ~ percentage,
  ~ color, 
  0,
  not_greg$amounts[1],
  paste0(props_greg_not_greg$prop[props_greg_not_greg$year == 2019][2], "%"),
  'black',
  not_greg$amounts[1],
  data_for_annotation$amount_sum[1],
  paste0(props_greg_not_greg$prop[props_greg_not_greg$year == 2019][1], "%"),
  'white'
) %>%
  mutate(amount_mid = (amount_min + amount_max) / 2)

annotation_data_2020 <- tribble(
  ~ amount_min,
  ~ amount_max,
  ~ percentage,
  ~ color,
  0,
  not_greg$amounts[2],
  paste0(props_greg_not_greg$prop[props_greg_not_greg$year == 2020][2], "%"),
  'black',
  not_greg$amounts[2],
  data_for_annotation$amount_sum[2],
  paste0(props_greg_not_greg$prop[props_greg_not_greg$year == 2020][1], "%"),
  'white'
) %>%
  mutate(amount_mid = (amount_min + amount_max) / 2)

annotation_data_2021 <- tribble(
  ~ amount_min,
  ~ amount_max,
  ~ percentage,
  ~ color, 
  0,
  not_greg$amounts[3],
  paste0(props_greg_not_greg$prop[props_greg_not_greg$year == 2021][2], "%"),  
  'black',
  not_greg$amounts[3],
  data_for_annotation$amount_sum[3],
  paste0(props_greg_not_greg$prop[props_greg_not_greg$year == 2021][1], "%"),
  'white'
) %>%
  mutate(amount_mid = (amount_min + amount_max) / 2)

annotation_data_2022 <- tribble(
  ~ amount_min,
  ~ amount_max,
  ~ percentage,
  ~ color,
  0,
  not_greg$amounts[4],
  paste0(props_greg_not_greg$prop[props_greg_not_greg$year == 2022][2], "%"),
  'black',
  not_greg$amounts[4],
  data_for_annotation$amount_sum[4],
  paste0(props_greg_not_greg$prop[props_greg_not_greg$year == 2022][1], "%"),
  'white'
) %>%
  mutate(amount_mid = (amount_min + amount_max) / 2)
```

```{r plot-4}
ggplot(greg_not_greg) +
  geom_bar(aes(x = year, y = amounts, fill = is_greg),
           position = 'stack',
           stat = 'identity') +
  geom_text(
    data = annotation_data_2019,
    aes(
      x = 2019,
      y = amount_mid,
      label = percentage,
      color = color
    ),
    size = 3
  ) +
  geom_text(
    data = annotation_data_2020,
    aes(
      x = 2020,
      y = amount_mid,
      label = percentage,
      color = color
    ),
    size = 3
  ) +
  geom_text(
    data = annotation_data_2021,
    aes(
      x = 2021,
      y = amount_mid,
      label = percentage,
      color = color
    ),
    size = 3
  ) +
  geom_text(
    data = annotation_data_2022,
    aes(
      x = 2022,
      y = amount_mid,
      label = percentage,
      color = color
    ),
    size = 3
  ) +
  scale_color_identity() +
  labs(x = "Year", y = "Amount Donated for anti-LGBTQ+ Campaigns (in USD)",
       fill = "Politician") +
  scale_fill_manual(values = c("#AA4A44", "lightgrey")) +
  scale_y_continuous(
    limits = c(0, 11000000),
    labels = scales::label_dollar(),
    breaks = c(0, 2000000, 4000000, 6000000, 8000000, 10000000)
  ) +
  theme_minimal() +
   theme(
    legend.position = c(0.14, 0.85),
    legend.background = element_blank(),
    legend.box.background = element_rect(colour = "darkgrey", size = 0.5))
```

### Discussion

(1-3 paragraphs): In the Discussion section, interpret the results of your analysis. Identify any trends revealed (or not revealed) by the plots. Speculate about why the data looks the way it does.

## Question 2: Title that relates to the question you're answering

### Introduction

(1-2 paragraphs): Introduction to the question and what parts of the dataset are necessary to answer the question. Also discuss why you're interested in this question.

### Approach

(1-2 paragraphs): Describe what types of plots you are going to make to address your question. For each plot, provide a clear explanation as to why this plot (e.g. boxplot, barplot, histogram, etc.) is best for providing the information you are asking about. The two plots should be of different types, and at least one of the two plots needs to use either color mapping or facets.

### Analysis

(2-3 code blocks, 2 figures, text/code comments as needed): In this section, provide the code that generates your plots. Use scale functions to provide nice axis labels and guides. You are welcome to use theme functions to customize the appearance of your plot, but you are not required to do so. All plots must be made with **ggplot2**. Do not use base R or lattice plotting functions.

### Discussion

(1-3 paragraphs): In the Discussion section, interpret the results of your analysis. Identify any trends revealed (or not revealed) by the plots. Speculate about why the data looks the way it does.
